'use client';import { useEffect, useMemo, useState } from "react";import ClaimsPanel from "../components/ClaimsPanel";import DashboardHeader from "../components/DashboardHeader";import InterfaceSidebar from "../components/InterfaceSidebar";import MarketplaceBoard from "../components/MarketplaceBoard";import MetricsGrid from "../components/MetricsGrid";import MobileInterfaceTabs from "../components/MobileInterfaceTabs";import ProjectsBoard from "../components/ProjectsBoard";import QueuePanel from "../components/QueuePanel";import StatusPanelCard from "../components/StatusPanel";import ThroughputPanel from "../components/ThroughputPanel";import ProjectWizardModal from "../components/ProjectWizardModal";import type {  ClaimPanel,  InterfaceKey,  InterfaceOption,  MarketplaceFilter,  MarketplaceProject,  Metric,  ProjectAssignment,  QueuePanel as QueuePanelData,  RangeInsights,  RangeKey,  RangeOption,  StatusPanel,  TimelinePoint,  Tone,  Trend,} from "../types/dashboard";const iconClass = "h-4 w-4";const navIcon = (path: string) => (  <svg className={iconClass} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">    <path d={path} stroke="currentColor" strokeWidth="1.6" strokeLinecap="round" strokeLinejoin="round" />  </svg>);const interfaceOptions: InterfaceOption[] = [  {    key: "dashboard",    label: "Dashboard",    badge: "Admin",    description: "Global KPIs & throughput.",    icon: navIcon("M4 9l8-6 8 6v10a2 2 0 01-2 2H6a2 2 0 01-2-2V9z"),  },  {    key: "installers",    label: "Installers",    badge: "Crew",    description: "Marketplace demand & crew locks.",    icon: navIcon("M4 19v-2a4 4 0 014-4h0a4 4 0 014 4v2M12 11a4 4 0 10-8 0 4 4 0 008 0zm8 8v-1.5a3.5 3.5 0 00-2.8-3.43M16 7a3 3 0 110 6"),  },  {    key: "suppliers",    label: "Suppliers",    badge: "Supply",    description: "Equipment readiness & delivery.",    icon: navIcon("M4 7h16M4 17h16M4 12h16"),  },  {    key: "projects",    label: "Projects",    badge: "Portfolio",    description: "Taken projects and milestones.",    icon: navIcon("M4 5h6l2 3h8v11H4V5z"),  },  {    key: "qa",    label: "QA",    badge: "Quality",    description: "Evidence backlog & verifications.",    icon: navIcon("M9 11l3 3L21 5M4 19h16"),  },  {    key: "partners",    label: "Partners",    badge: "Network",    description: "Partner-led activations & royalties.",    icon: navIcon("M12 12a5 5 0 100-10 5 5 0 000 10zm-9 9a9 9 0 0118 0H3z"),  },];const secondaryLinks = [  {    label: "Invoices",    icon: navIcon("M6 3h12v18H6z M9 7h6"),  },  {    label: "Documents",    icon: navIcon("M6 2h9l3 3v17H6z"),  },  {    label: "Support",    icon: navIcon("M12 6a4 4 0 00-4 4h2a2 2 0 114 0c0 2-3 1.75-3 5h2c0-2.5 3-2.5 3-5a4 4 0 00-4-4zm0 12h.01"),  },];const accountInfo = {  name: "Mouad Bekkali",  role: "Ops Admin",  email: "mouad.bekkali@eaneer.com",  initials: "MB",};const accentPositive = "text-[color:var(--color-primary)]";const accentNegative = "text-[color:var(--color-grayish)]";const accentNeutral = "text-[color:var(--color-muted)]";const interfaceHighlights: Record<InterfaceKey, { kicker: string; title: string; helper: string }> = {  dashboard: {    kicker: "Ops Control Tower",    title: "Admin performance dashboard",    helper: "Monitor activation velocity, QA throughput, and cross-role SLA adherence in real time.",  },  installers: {    kicker: "Marketplace lens",    title: "Installer marketplace",    helper: "Balance claim velocity, undo usage, and crew quality across regions.",  },  suppliers: {    kicker: "Supply lens",    title: "Supplier logistics",    helper: "Track RFQs, locked lots, and delivery performance for every pack.",  },  projects: {    kicker: "Portfolio lens",    title: "Taken project execution",    helper: "Stay ahead of milestones and partner handoffs across the client pipeline.",  },  qa: {    kicker: "Quality lens",    title: "QA evidence pipeline",    helper: "Surface backlog aging, approvals, and escalations across QA teams.",  },  partners: {    kicker: "Partner lens",    title: "Partner network performance",    helper: "Review partner-led activations, royalties, and template adoption.",  },};const metricsByInterface: Record<InterfaceKey, Metric[]> = {  dashboard: [    {      label: "Revenue captured",      value: "MAD 12.5M",      change: "+12.5%",      trend: "up",      tone: "positive",      annotation: "Trending up this month",      detail: "Payments cleared via PSP in last 30 days",    },    {      label: "Active projects",      value: "256",      change: "+18%",      trend: "up",      tone: "positive",      annotation: "Pipeline expanding",      detail: "Projects post-payment currently in execution",    },    {      label: "Verified projects",      value: "142",      change: "+9%",      trend: "up",      tone: "positive",      annotation: "QA pass rate improving",      detail: "Testing â†’ Verified this quarter",    },    {      label: "Deadline breaches",      value: "5",      change: "-3",      trend: "down",      tone: "positive",      annotation: "Reduced escalations",      detail: "Events flagged to Admin during past week",    },  ],  installers: [    {      label: "Active installer locks",      value: "96",      change: "+6%",      trend: "up",      tone: "positive",      annotation: "Crew capacity secured",      detail: "Assignments past undo window",    },    {      label: "Undo timers",      value: "18",      change: "-4",      trend: "down",      tone: "positive",      annotation: "Fewer reversals",      detail: "Installer claims still inside 30m grace",    },    {      label: "QA first-pass",      value: "77%",      change: "+3%",      trend: "up",      tone: "positive",      annotation: "Crew quality improving",      detail: "Installer jobs verified without rework",    },    {      label: "Crew SLA breaches",      value: "4",      change: "+1",      trend: "up",      tone: "negative",      annotation: "Monitor overdue jobs",      detail: "Installer delays in last 7 days",    },  ],  suppliers: [    {      label: "Kits reserved",      value: "58",      change: "+3",      trend: "up",      tone: "positive",      annotation: "Inventory locked",      detail: "Supplier claims by project lot",    },    {      label: "Delivery success",      value: "92%",      change: "+3.2%",      trend: "up",      tone: "positive",      annotation: "On-time equipment",      detail: "Deliveries meeting promised SLA",    },    {      label: "Open RFQs",      value: "17",      change: "-5",      trend: "down",      tone: "positive",      annotation: "Demand clearing",      detail: "Projects awaiting supplier claim",    },    {      label: "Backorders",      value: "2",      change: "0",      trend: "down",      tone: "neutral",      annotation: "Monitor inverter stock",      detail: "Lots delayed pending inventory",    },  ],  projects: [    {      label: "Active portfolio",      value: "84",      change: "+22%",      trend: "up",      tone: "positive",      annotation: "New installs kicking off",      detail: "Taken projects currently assigned",    },    {      label: "Verification rate",      value: "74%",      change: "+5%",      trend: "up",      tone: "positive",      annotation: "QA throughput steady",      detail: "Projects passing QA first review",    },    {      label: "At-risk milestones",      value: "6",      change: "+2",      trend: "up",      tone: "negative",      annotation: "Need intervention",      detail: "Deadlines slipping this week",    },    {      label: "Client NPS",      value: "62",      change: "+6",      trend: "up",      tone: "positive",      annotation: "Sentiment rising",      detail: "Rolling 30-day survey responses",    },  ],  qa: [    {      label: "Projects in QA",      value: "34",      change: "-8",      trend: "down",      tone: "positive",      annotation: "Backlog clearing",      detail: "Testing â†’ Verified queue size",    },    {      label: "First-pass success",      value: "81%",      change: "+4%",      trend: "up",      tone: "positive",      annotation: "Evidence quality up",      detail: "QA approvals without rework",    },    {      label: "Evidence aging",      value: "11.4h",      change: "-3.1h",      trend: "down",      tone: "positive",      annotation: "Faster reviews",      detail: "Average time from upload to verdict",    },    {      label: "QA breaches",      value: "1",      change: "-2",      trend: "down",      tone: "positive",      annotation: "Escalations contained",      detail: "QA misses escalated this week",    },  ],  partners: [    {      label: "Partner-created",      value: "28",      change: "+9%",      trend: "up",      tone: "positive",      annotation: "Channel growing",      detail: "Projects initiated by partners this month",    },    {      label: "Royalty accrued",      value: "MAD 640K",      change: "+6%",      trend: "up",      tone: "positive",      annotation: "Commission uplift",      detail: "Royalties due to partners",    },    {      label: "Templates used",      value: "63%",      change: "+4%",      trend: "up",      tone: "positive",      annotation: "Operational consistency",      detail: "Partner projects via templates",    },    {      label: "Pending approvals",      value: "7",      change: "-3",      trend: "down",      tone: "positive",      annotation: "Reduced admin load",      detail: "Partner-created projects awaiting QA setup",    },  ],};const statusPanels: Partial<Record<InterfaceKey, StatusPanel>> = {  dashboard: {    kicker: "Status monitor",    title: "Project flow",    badge: "SLA target = 85%",    items: [      { status: "Pending payment", count: 32, delta: "+4", tone: "positive", note: "Awaiting PSP confirmation" },      { status: "Active", count: 128, delta: "+18", tone: "positive", note: "Installer marketplace open" },      { status: "Equipment requested", count: 54, delta: "0", tone: "neutral", note: "Suppliers reviewing BOM" },      { status: "Testing (QA)", count: 26, delta: "-2", tone: "negative", note: "Docs missing" },    ],  },  installers: {    kicker: "Installer pulse",    title: "Crew workload",    badge: "Undo window 30m",    items: [      { status: "Open claims", count: 41, delta: "-6", tone: "positive", note: "Crew responding faster" },      { status: "Locked installers", count: 96, delta: "+8", tone: "positive", note: "Capacity matched" },      { status: "QA pending", count: 19, delta: "+2", tone: "negative", note: "Evidence required" },      { status: "Breaches", count: 4, delta: "+1", tone: "negative", note: "Admin follow-up" },    ],  },  suppliers: {    kicker: "Supplier pulse",    title: "Equipment readiness",    badge: "Logistics buffer 4d",    items: [      { status: "Open RFQs", count: 17, delta: "-5", tone: "positive", note: "Inventory allocated" },      { status: "Locked lots", count: 58, delta: "+3", tone: "positive", note: "Kits reserved" },      { status: "Deliveries today", count: 9, delta: "+2", tone: "positive", note: "Routes dispatched" },      { status: "Backorders", count: 2, delta: "0", tone: "neutral", note: "Awaiting inverter stock" },    ],  },  qa: {    kicker: "QA monitor",    title: "Evidence pipeline",    badge: "Target SLA 24h",    items: [      { status: "Awaiting evidence", count: 11, delta: "-4", tone: "positive", note: "Installers uploading" },      { status: "Under review", count: 23, delta: "+3", tone: "negative", note: "QA capacity stretch" },      { status: "Approved", count: 118, delta: "+11", tone: "positive", note: "Verified this month" },      { status: "Rework", count: 7, delta: "-2", tone: "positive", note: "Partner coaching working" },    ],  },};const claimPanels: Partial<Record<InterfaceKey, ClaimPanel>> = {  dashboard: {    kicker: "Claims monitor",    title: "30-minute undo window",    description: "Installer and supplier locks tied to SLA targets.",    items: [      { title: "Installer", chipLabel: "Undo open", chipValue: "6", primaryLabel: "Locked assignments", primaryValue: "48", secondaryLabel: "Deadline breaches", secondaryValue: "3", secondaryTone: "negative" },      { title: "Supplier", chipLabel: "Undo open", chipValue: "3", primaryLabel: "Locked assignments", primaryValue: "22", secondaryLabel: "Deadline breaches", secondaryValue: "1", secondaryTone: "negative" },    ],  },  installers: {    kicker: "Crew actions",    title: "Installer claim health",    description: "Undo usage and breach watchlist.",    items: [      { title: "Active crews", chipLabel: "Undo", chipValue: "4", primaryLabel: "Locked claims", primaryValue: "61", secondaryLabel: "Breaches", secondaryValue: "2", secondaryTone: "negative" },      { title: "QA ready", chipLabel: "Uploads", chipValue: "13", primaryLabel: "Evidence received", primaryValue: "29", secondaryLabel: "Missing", secondaryValue: "5", secondaryTone: "negative" },    ],  },  suppliers: {    kicker: "Supply actions",    title: "Equipment logistics",    description: "Monitor delivery readiness per pack.",    items: [      { title: "Lots staging", chipLabel: "Dispatch", chipValue: "6", primaryLabel: "Ready kits", primaryValue: "24", secondaryLabel: "Delayed", secondaryValue: "2", secondaryTone: "negative" },      { title: "Serial capture", chipLabel: "Pending", chipValue: "3", primaryLabel: "Serial complete", primaryValue: "18", secondaryLabel: "Missing", secondaryValue: "1", secondaryTone: "negative" },    ],  },};const queuePanels: Partial<Record<InterfaceKey, QueuePanelData>> = {  dashboard: {    kicker: "QA queue",    title: "Testing ? Verified",    description: "Oldest projects awaiting QA sign-off.",    items: [      { primary: "M-Pack 5kW", secondary: "Casa-Settat", meta: "Aging 12h", owner: "QA Team A" },      { primary: "T-Pack 8kW", secondary: "Marrakech-Safi", meta: "Aging 26h", owner: "QA Team B" },      { primary: "M-Pack 3kW", secondary: "Rabat-SalÃ©", meta: "Aging 6h", owner: "QA Team A" },    ],  },  qa: {    kicker: "QA backlog",    title: "Evidence queue",    description: "Focus on the evidence aging fastest.",    items: [      { primary: "TechPark HQ", secondary: "Battery logs", meta: "Aging 4h", owner: "QA Core" },      { primary: "Atlas Resort", secondary: "Thermal photos", meta: "Aging 7h", owner: "QA Storage" },      { primary: "SmartStore", secondary: "Serial capture", meta: "Aging 9h", owner: "QA Field" },    ],  },};const rangeOptions: RangeOption[] = [  { key: "90d", label: "Last 90 days" },  { key: "30d", label: "Last 30 days" },  { key: "7d", label: "Last 7 days" },];const timelineSources: Record<RangeKey, TimelinePoint[]> = {  "90d": [    { label: "Jul 1", active: 48, verified: 22 },    { label: "Jul 10", active: 70, verified: 35 },    { label: "Jul 19", active: 68, verified: 36 },    { label: "Jul 28", active: 88, verified: 48 },    { label: "Aug 6", active: 92, verified: 50 },    { label: "Aug 15", active: 86, verified: 54 },    { label: "Aug 24", active: 94, verified: 60 },    { label: "Sep 2", active: 102, verified: 66 },    { label: "Sep 11", active: 110, verified: 70 },    { label: "Sep 20", active: 118, verified: 76 },    { label: "Sep 29", active: 124, verified: 81 },  ],  "30d": [    { label: "Aug 30", active: 82, verified: 40 },    { label: "Sep 3", active: 88, verified: 44 },    { label: "Sep 7", active: 94, verified: 48 },    { label: "Sep 11", active: 100, verified: 54 },    { label: "Sep 15", active: 108, verified: 60 },    { label: "Sep 19", active: 112, verified: 65 },    { label: "Sep 23", active: 118, verified: 70 },    { label: "Sep 27", active: 124, verified: 74 },  ],  "7d": [    { label: "Sep 21", active: 110, verified: 62 },    { label: "Sep 22", active: 112, verified: 63 },    { label: "Sep 23", active: 116, verified: 66 },    { label: "Sep 24", active: 118, verified: 68 },    { label: "Sep 25", active: 120, verified: 70 },    { label: "Sep 26", active: 122, verified: 73 },    { label: "Sep 27", active: 124, verified: 74 },  ],};const rangeDetail: Record<RangeKey, RangeInsights> = {  "90d": {    activation: { value: "6.4 days", caption: "Median Draft â†’ Active after payment" },    qa: { value: "74%", caption: "Projects verified without rework" },    breaches: { value: "5", caption: "`deadline.breach` events", tone: "negative" },  },  "30d": {    activation: { value: "5.8 days", caption: "Median Draft â†’ Active" },    qa: { value: "78%", caption: "QA first pass success" },    breaches: { value: "3", caption: "Events escalated to Admin", tone: "neutral" },  },  "7d": {    activation: { value: "5.1 days", caption: "Median Draft â†’ Active" },    qa: { value: "81%", caption: "QA first pass success" },    breaches: { value: "1", caption: "Events escalated to Admin", tone: "positive" },  },};const marketplaceFiltersByInterface: Record<"marketplace" | "installers" | "suppliers", MarketplaceFilter[]> = {  marketplace: [    { key: "all", label: "All" },    { key: "active", label: "Active" },    { key: "equipment", label: "Equipment" },    { key: "testing", label: "Testing" },    { key: "ready", label: "QA Ready" },  ],  installers: [    { key: "all", label: "All" },    { key: "active", label: "Active" },    { key: "testing", label: "Testing" },  ],  suppliers: [    { key: "all", label: "All" },    { key: "equipment", label: "Equipment" },    { key: "ready", label: "Ready" },  ],};const marketplaceProjects: MarketplaceProject[] = [  {    id: "mk-01",    client: "Casa Villa Rooftop",    pack: "M-Pack 5kW",    city: "Casablanca",    region: "Casablanca-Settat",    statusKey: "active",    statusLabel: "Claimed â€“ installing",    deadline: "Sep 30",    claimState: "Locked",    installer: "Atlas Solar Crew",    supplier: "SunLogix",    progress: 64,    tags: ["Installer ETA 2d", "QA booking pending"],    highlight: "Crew onsite, AC works in progress. QA visit scheduled after insulation sign-off.",  },  {    id: "mk-02",    client: "SmartStore Retrofit",    pack: "T-Pack 8kW",    city: "Marrakech",    region: "Marrakech-Safi",    statusKey: "equipment",    statusLabel: "Equipment requested",    deadline: "Oct 04",    claimState: "Open",    undoWindow: "18m",    installer: "Pending",    supplier: "VoltSupply",    progress: 38,    tags: ["Awaiting inverter serials", "Partner Alpha"],    highlight: "Supplier prepping logistics; inverter serial capture required before dispatch.",  },  {    id: "mk-03",    client: "Atlas Resort",    pack: "T-Pack 12kW + Storage",    city: "Agadir",    region: "Souss-Massa",    statusKey: "testing",    statusLabel: "Testing window",    deadline: "Sep 27",    claimState: "Locked",    installer: "Eaneer Elite Crew",    supplier: "SunHub",    progress: 82,    tags: ["QA checklist v0.6", "Battery calibration"],    highlight: "Commissioning docs uploaded, QA evidence requested for storage integration.",  },  {    id: "mk-04",    client: "TechPark HQ",    pack: "M-Pack 15kW",    city: "Rabat",    region: "Rabat-SalÃ©",    statusKey: "ready",    statusLabel: "Ready for QA",    deadline: "Sep 24",    claimState: "Locked",    installer: "Partner Nova",    supplier: "VoltSupply",    progress: 96,    tags: ["Docs verified", "Client walkthrough"],    highlight: "Installer completed punch-list, QA slot booked for tomorrow morning.",  },];const projectAssignments: ProjectAssignment[] = [  {    id: "pr-01",    title: "Casa Villa Rooftop",    pack: "M-Pack 5kW",    owner: "Installer Hub",    phase: "Installing",    status: "Mounting array",    nextMilestone: "QA booking pending",    eta: "Sep 29",    progress: 64,    health: "on-track",    notes: "Crew checking AC isolation and grounding before QA.",  },  {    id: "pr-02",    title: "SmartStore Retrofit",    pack: "T-Pack 8kW",    owner: "Partner Alpha",    phase: "Equipment",    status: "Awaiting serial capture",    nextMilestone: "Supplier dispatch",    eta: "Oct 04",    progress: 38,    health: "at-risk",    notes: "Supplier needs inverter serial confirmation for customs.",  },  {    id: "pr-03",    title: "Atlas Resort",    pack: "T-Pack 12kW + Storage",    owner: "Admin QA",    phase: "Testing",    status: "QA evidence review",    nextMilestone: "QA verification",    eta: "Sep 27",    progress: 82,    health: "on-track",    notes: "Storage telemetry uploaded; awaiting thermal photos.",  },  {    id: "pr-04",    title: "MedLab Clinics",    pack: "M-Pack 10kW",    owner: "Client Success",    phase: "Installing",    status: "Partner check-in overdue",    nextMilestone: "Admin follow-up",    eta: "Oct 02",    progress: 45,    health: "delayed",    notes: "Awaiting signature on updated single line diagram.",  },];const toneToClass = (tone: Tone) => {  if (tone === "positive") {    return accentPositive;  }  if (tone === "negative") {    return accentNegative;  }  return accentNeutral;};const secondaryToneToClass = (tone: Tone) => {  if (tone === "positive") {    return accentPositive;  }  if (tone === "negative") {    return accentNegative;  }  return accentNeutral;};const trendIcon = (trend: Trend) => (trend === "up" ? "â–²" : "â–¼");export default function Home() {  const [selectedInterface, setSelectedInterface] = useState<InterfaceKey>("dashboard");  const [selectedRange, setSelectedRange] = useState<RangeKey>("90d");  const [marketplaceFilter, setMarketplaceFilter] = useState<MarketplaceFilter["key"]>("all");  const [projectModalOpen, setProjectModalOpen] = useState(false);  useEffect(() => {    const allowed = selectedInterface === "installers"      ? marketplaceFiltersByInterface.installers      : selectedInterface === "suppliers"      ? marketplaceFiltersByInterface.suppliers      : marketplaceFiltersByInterface.marketplace;    const allowedKeys = allowed.map((filter) => filter.key);    if (!allowedKeys.includes(marketplaceFilter)) {      setMarketplaceFilter("all");    }  }, [selectedInterface, marketplaceFilter]);  const timelineData = useMemo(() => timelineSources[selectedRange], [selectedRange]);  const metrics = metricsByInterface[selectedInterface];  const highlight = interfaceHighlights[selectedInterface];  const statusPanel = statusPanels[selectedInterface];  const claimPanel = claimPanels[selectedInterface];  const queuePanel = queuePanels[selectedInterface];  const insights = rangeDetail[selectedRange];  const lastSync = useMemo(    () => new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }),    [],  );  const filteredMarketplaceProjects = useMemo(() => {    const base = selectedInterface === "installers"      ? marketplaceProjects.filter((project) => project.statusKey === "active" || project.statusKey === "testing")      : selectedInterface === "suppliers"      ? marketplaceProjects.filter((project) => project.statusKey === "equipment" || project.statusKey === "ready")      : marketplaceProjects;    if (marketplaceFilter === "all") {      return base.map((p) => (p.id === "mk-01" ? { ...p, statusLabel: "Claimed â†’ Installing" } : p));    }    return base      .filter((project) => project.statusKey === marketplaceFilter)      .map((p) => (p.id === "mk-01" ? { ...p, statusLabel: "Claimed â†’ Installing" } : p));  }, [selectedInterface, marketplaceFilter]);  const currentMarketplaceFilters = useMemo(() => {    if (selectedInterface === "installers") {      return marketplaceFiltersByInterface.installers;    }    if (selectedInterface === "suppliers") {      return marketplaceFiltersByInterface.suppliers;    }    return marketplaceFiltersByInterface.marketplace;  }, [selectedInterface]);  const renderSidebarFooter = (selected: InterfaceKey) => {    if (selected !== "projects") {      return null;    }    return (      <div className="glass-panel-strong px-5 py-6 space-y-4">        <div>          <p className="font-heading text-[12px] uppercase tracking-[0.28em] text-[color:var(--color-muted)]">            Add project          </p>          <p className="text-[13px] text-[color:var(--color-text)]">Spin up a client or partner project in three steps.</p>        </div>        <button type="button" className="btn-primary w-full" onClick={() => setProjectModalOpen(true)}>          New project        </button>        <p className="text-[11px] text-[color:var(--color-muted)]">          Define location, choose pack, collect payment, and assign installer in one flow.        </p>      </div>    );  };  return (    <div className="min-h-screen bg-[color:var(--color-background)] text-[color:var(--color-text)]">      {projectModalOpen && (        <ProjectWizardModal          open={projectModalOpen}          onClose={() => setProjectModalOpen(false)}          onCreate={(proj) => {            console.log("Project created", proj);            // In a real app, POST /projects then redirect to payment URL            alert(`Project created. Payment URL: ${proj.paymentUrl}`);          }}        />      )}      <div className="mx-auto flex w-full max-w-none gap-6 px-[5vw] py-8 lg:flex-row">        <InterfaceSidebar          options={interfaceOptions}          selectedKey={selectedInterface}          onSelect={setSelectedInterface}          secondaryLinks={secondaryLinks}          account={accountInfo}          onAddProject={() => setProjectModalOpen(true)}
          renderFooter={renderSidebarFooter}        />        <main className="flex-1 space-y-8 pb-12">          <MobileInterfaceTabs            options={interfaceOptions}            selectedKey={selectedInterface}            onSelect={setSelectedInterface}          />          <DashboardHeader highlight={highlight} lastSync={lastSync} />          <MetricsGrid metrics={metrics} toneToClass={toneToClass} trendIcon={trendIcon} />          {selectedInterface === "dashboard" && (            <section className="grid gap-6 xl:grid-cols-[2fr_1fr]">              <ThroughputPanel                timelineData={timelineData}                rangeOptions={rangeOptions}                selectedRange={selectedRange}                onSelectRange={setSelectedRange}                insights={insights}                toneToClass={toneToClass}              />              <aside className="flex flex-col gap-6">                {statusPanel ? <StatusPanelCard panel={statusPanel} toneToClass={toneToClass} /> : null}                {claimPanel ? (                  <ClaimsPanel panel={claimPanel} secondaryToneToClass={secondaryToneToClass} />                ) : null}                {queuePanel ? <QueuePanel panel={queuePanel} /> : null}              </aside>            </section>          )}          {selectedInterface === "installers" && (            <div className="space-y-6">              <MarketplaceBoard                projects={filteredMarketplaceProjects}                filters={currentMarketplaceFilters}                activeFilter={marketplaceFilter}                onFilterChange={setMarketplaceFilter}                title="Installer marketplace"                subtitle="Monitor claim velocity, undo usage, and QA readiness across crews."              />              <div className="grid gap-6 lg:grid-cols-2">                {statusPanel ? <StatusPanelCard panel={statusPanel} toneToClass={toneToClass} /> : null}                {claimPanel ? (                  <ClaimsPanel panel={claimPanel} secondaryToneToClass={secondaryToneToClass} />                ) : null}              </div>            </div>          )}          {selectedInterface === "suppliers" && (            <div className="space-y-6">              <MarketplaceBoard                projects={filteredMarketplaceProjects}                filters={currentMarketplaceFilters}                activeFilter={marketplaceFilter}                onFilterChange={setMarketplaceFilter}                title="Supplier logistics"                subtitle="Track RFQs, locked lots, and delivery performance across suppliers."              />              <div className="grid gap-6 lg:grid-cols-2">                {statusPanel ? <StatusPanelCard panel={statusPanel} toneToClass={toneToClass} /> : null}                {claimPanel ? (                  <ClaimsPanel panel={claimPanel} secondaryToneToClass={secondaryToneToClass} />                ) : null}              </div>            </div>          )}          {selectedInterface === "projects" && (            <ProjectsBoard              assignments={projectAssignments}              title="Taken projects"              subtitle="Monitor execution health and upcoming milestones across the portfolio."            />          )}          {selectedInterface === "qa" && (            <section className="grid gap-6 xl:grid-cols-[3fr_2fr]">              <ThroughputPanel                timelineData={timelineData}                rangeOptions={rangeOptions}                selectedRange={selectedRange}                onSelectRange={setSelectedRange}                insights={insights}                toneToClass={toneToClass}              />              <div className="flex flex-col gap-6">                {statusPanel ? <StatusPanelCard panel={statusPanel} toneToClass={toneToClass} /> : null}                {queuePanel ? <QueuePanel panel={queuePanel} /> : null}              </div>            </section>          )}          {selectedInterface === "partners" && (            <div className="space-y-6">              <ProjectsBoard                assignments={projectAssignments}                title="Partner-led projects"                subtitle="Review partner-created activation status, royalties, and pending approvals."              />              <div className="glass-panel p-5 text-[13px] text-[color:var(--color-muted)]">                Partners gain visibility into performance benchmarks, royalties, and template utilization.                Upcoming iterations will surface leaderboard metrics and automated commission statements.              </div>            </div>          )}        </main>      </div>    </div>  );}


